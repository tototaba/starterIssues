/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/assembly/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["AssemblyModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["AssemblyModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["AssemblyModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/assembly/full/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["AssemblyModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/assembly": {
    get: {
      parameters: {
        query: {
          Code?: string;
          Description?: string;
          ListCode?: string;
          Available?: boolean;
          IncludeChildren?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["AssemblyModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["AssemblyModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["AssemblyModel"];
        };
      };
    };
  };
  "/api/assembly/{id}/history": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          AssemblyHistoryId?: number;
          AssemblyId?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["AssemblyHistoryModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/assembly/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["AssemblyModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/budget/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["BudgetModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["BudgetModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BudgetModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/budget": {
    get: {
      parameters: {
        query: {
          BudgetNumber?: string;
          Description?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["BudgetModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["BudgetModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BudgetModel"];
        };
      };
    };
  };
  "/api/client/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          withConfig?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/client": {
    get: {
      parameters: {
        query: {
          Page?: number;
          Limit?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ClientModel"];
        };
      };
    };
  };
  "/api/client/modules": {
    get: {
      parameters: {
        query: {
          Page?: number;
          Limit?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/client/productseats": {
    get: {
      parameters: {
        query: {
          Page?: number;
          Limit?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/client/products/{productId}": {
    get: {
      parameters: {
        path: {
          productId: number;
        };
        query: {
          Page?: number;
          Limit?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/condition/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConditionModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConditionModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ConditionModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/condition": {
    get: {
      parameters: {
        query: {
          id?: number;
          Condition?: string;
          BaseModifier?: number;
          DefaultCondition?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConditionUnitModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["ConditionModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ConditionModel"];
        };
      };
    };
  };
  "/api/condition/{id}/constructionunit": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          Condition?: string;
          BaseModifier?: number;
          DefaultCondition?: boolean;
          UnitType?: string;
          Code?: string;
          Description?: string;
          ListCode?: string;
          InstallHours?: number;
          RemoveHours?: number;
          MaintainHours?: number;
          ConditionId?: number;
          ConstructionUnitId?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConditionUnitModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/constructionunit/{constructionunitid}/condition": {
    get: {
      parameters: {
        path: {
          constructionUnitId: number;
        };
        query: {
          Condition?: string;
          BaseModifier?: number;
          DefaultCondition?: boolean;
          UnitType?: string;
          Code?: string;
          Description?: string;
          ListCode?: string;
          InstallHours?: number;
          RemoveHours?: number;
          MaintainHours?: number;
          ConditionId?: number;
          ConstructionUnitId?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConditionUnitModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          constructionUnitId: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["ConditionUnitModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ConditionUnitModel"];
        };
      };
    };
  };
  "/api/constructionunit/{constructionunitid}/condition/{conditionid}": {
    get: {
      parameters: {
        path: {
          conditionId: number;
          constructionUnitId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConditionUnitModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          conditionId: number;
          constructionUnitId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConditionUnitModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ConditionUnitModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          conditionId: number;
          constructionUnitId: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/client/{id}/config": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/client/{id}/config/{configId}": {
    get: {
      parameters: {
        path: {
          id: number;
          configId: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
          configId: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ConfigSwitchModel"];
        };
      };
    };
  };
  "/api/configtype/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/configtype": {
    get: {
      parameters: {
        query: {
          id?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/component/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConstructionUnitNextModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/component": {
    get: {
      parameters: {
        query: {
          Code?: string;
          Description?: string;
          ListCode?: string;
          Available?: boolean;
          ConstructionUnitType?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConstructionUnitNextModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/constructionunit/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConstructionUnitModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/constructionunit": {
    get: {
      parameters: {
        query: {
          Code?: string;
          Description?: string;
          ListCode?: string;
          Available?: boolean;
          ConstructionUnitType?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConstructionUnitModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/constructionunit/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ConstructionUnitModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/contractor/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ContractorModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/contractor/full/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/contractor": {
    get: {
      parameters: {
        query: {
          ContractorName?: string;
          Address1?: string;
          Address2?: string;
          City?: string;
          StateAbbr?: string;
          Zip?: string;
          Phone?: string;
          Fax?: string;
          IncludeChildren?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["ContractorModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ContractorModel"];
        };
      };
    };
  };
  "/api/contractor/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/contractor/{contractorid}/rate/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
          contractorId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorRateModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
          contractorId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorRateModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ContractorRateModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
          contractorId: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/contractor/{contractorid}/rate": {
    get: {
      parameters: {
        path: {
          contractorId: number;
        };
        query: {
          ConstructionUnitCode?: string;
          InstallPrice?: number;
          RemovePrice?: number;
          MaintainPrice?: number;
          TermStartDate?: string;
          TermEndDate?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorRateModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          contractorId: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["ContractorRateModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ContractorRateModel"];
        };
      };
    };
  };
  "/api/contractor/rate/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorRateModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/contractor/{contractorid}/rate/search": {
    post: {
      parameters: {
        path: {
          contractorId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ContractorRateModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/district/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DistrictModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DistrictModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["DistrictModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/district": {
    get: {
      parameters: {
        query: {
          DistrictCode?: string;
          DistrictName?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DistrictModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["DistrictModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["DistrictModel"];
        };
      };
    };
  };
  "/api/employee/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EmployeeModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EmployeeModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EmployeeModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/employee": {
    get: {
      parameters: {
        query: {
          EmployeeCode?: string;
          FirstName?: string;
          LastName?: string;
          EmailAddress?: string;
          RegularRate?: number;
          OvertimeRate?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EmployeeModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["EmployeeModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EmployeeModel"];
        };
      };
    };
  };
  "/api/equipment/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EquipmentModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EquipmentModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EquipmentModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/equipment": {
    get: {
      parameters: {
        query: {
          EquipmentCode?: string;
          Description?: string;
          MileageRate?: number;
          DailyMileage?: boolean;
          HourlyRate?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EquipmentModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["EquipmentModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EquipmentModel"];
        };
      };
    };
  };
  "/api/estimate/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EstimateModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/estimate": {
    get: {
      parameters: {
        query: {
          WorkOrderNumber?: string;
          WoId?: number;
          StakingName?: string;
          Condition?: string;
          Contractor?: string;
          EstimateName?: string;
          EstimateDescription?: string;
          EstimateCreatedDate?: string;
          LaborModifier?: number;
          MilesToSite?: number;
          MinutesToSite?: number;
          WorkHoursPerDay?: number;
          EstimatedStartDate?: string;
          Dirty?: boolean;
          Locked?: boolean;
          DateCalculated?: string;
          CalculatedBy?: string;
          Approved?: boolean;
          ApprovedBy?: string;
          ApprovedDate?: string;
          IncludeChildren?: boolean;
          WorkOrderId?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["EstimateModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EstimateModel"];
        };
      };
    };
  };
  "/api/estimate/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/search": {
    post: {
      parameters: {
        path: {
          workOrderId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{id}/approve": {
    post: {
      parameters: {
        path: {
          id: number;
          workOrderId: number;
        };
        query: {
          approved?: boolean;
          eventDate?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{id}/callout": {
    get: {
      parameters: {
        path: {
          id: number;
          workOrderId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CalloutModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
          workOrderId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CalloutModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CalloutModel"][];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{id}/summary": {
    get: {
      parameters: {
        path: {
          id: number;
          workOrderId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateSummaryOverviewModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{id}/constructionunit": {
    get: {
      parameters: {
        path: {
          id: number;
          workorderid: string;
        };
        query: {
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StakingFeatureCalloutModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{id}/estimatesummary": {
    get: {
      parameters: {
        path: {
          workOrderId: number;
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateSummaryModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
          workOrderId: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["EstimateSummaryModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{id}/estimatesummary": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          ApprovedEstimate?: boolean;
          EstimateName?: string;
          DateCalculated?: string;
          CalculatedBy?: string;
          StakingName?: string;
          StakingDescription?: string;
          Condition?: string;
          Contractor?: string;
          Material107?: number;
          Material108?: number;
          LaborHours?: number;
          Labor107?: number;
          Labor108?: number;
          Equipment?: number;
          EquipmentTransportation?: number;
          DirectCosts?: number;
          Contribution?: number;
          Transportation?: number;
          StoreOverhead?: number;
          Labor107Overhead?: number;
          Labor108Overhead?: number;
          GeneralOverhead?: number;
          LaborHoursPerDay?: number;
          LaborHourlyRate?: number;
          LaborHourlyOvertimeRate?: number;
          BaseLaborOverhead?: number;
          BaseMaterialOverhead?: number;
          BaseGeneralOverhead?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateSummaryModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/estimatesummary/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateSummaryModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimatesummary/search": {
    post: {
      parameters: {
        path: {
          workOrderId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateSummaryModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{estimateid}/cost": {
    get: {
      parameters: {
        path: {
          workOrderId: number;
          estimateid: number;
        };
        query: {
          FercAccount?: string;
          TransactionDisplayName?: string;
          Description?: string;
          TotalCost?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimatedCostModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          workOrderId: number;
          estimateId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimatedCostModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EstimatedCostModel"][];
        };
      };
    };
    post: {
      parameters: {
        path: {
          workOrderId: number;
          estimateId: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["EstimatedCostModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EstimatedCostModel"][];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{estimateid}/cost/search": {
    post: {
      parameters: {
        path: {
          workOrderId: number;
          estimateId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimatedCostModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{estimateid}/crew": {
    get: {
      parameters: {
        path: {
          workOrderId: number;
          estimateid: number;
        };
        query: {
          EmployeeCode?: string;
          EmployeeName?: string;
          HourlyRate?: number;
          OvertimeRate?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimatedCrewModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          workOrderId: number;
          estimateId: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["EstimatedCrewModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EstimatedCrewModel"][];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{estimateid}/crew/{id}": {
    put: {
      parameters: {
        path: {
          id: number;
          workOrderId: number;
          estimateId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimatedCrewModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EstimatedCrewModel"][];
        };
      };
    };
  };
  "/api/workorder/{workorderdi}/estimate/{estimateid}/{id}": {
    delete: {
      parameters: {
        path: {
          id: number;
          estimateId: number;
          workorderdi: string;
        };
        query: {
          workOrderId?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{estimateid}/crew/search": {
    post: {
      parameters: {
        path: {
          workOrderId: number;
          estimateId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimatedCrewModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{estimateid}/equipment": {
    get: {
      parameters: {
        path: {
          workOrderId: number;
          estimateid: number;
        };
        query: {
          EquipmentCode?: string;
          Hours?: number;
          HourlyRate?: number;
          UsageCost?: number;
          LaborDays?: number;
          TripCount?: number;
          MileageRate?: number;
          TotalMiles?: number;
          TransportationCost?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimatedEquipmentModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          workOrderId: number;
          estimateId: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["EstimatedEquipmentModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EstimatedEquipmentModel"][];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{estimateid}/equipment/{id}": {
    put: {
      parameters: {
        path: {
          id: number;
          workOrderId: number;
          estimateId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimatedEquipmentModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EstimatedEquipmentModel"][];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/estimate/{estimateid}/equipment/search": {
    post: {
      parameters: {
        path: {
          workOrderId: number;
          estimateId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimatedEquipmentModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/feature/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["FeatureModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/feature": {
    get: {
      parameters: {
        query: {
          FeatureClass?: string;
          StationNumber?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["FeatureModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["FeatureModel"];
        };
      };
    };
  };
  "/api/feature/{id}/history": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          EventDate?: string;
          EventType?: string;
          EventSummary?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EventModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/fercaccount/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FercAccountModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FercAccountModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["FercAccountModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/fercaccount": {
    get: {
      parameters: {
        query: {
          FercAccount?: string;
          Description?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FercAccountModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["FercAccountModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["FercAccountModel"];
        };
      };
    };
  };
  "/api/listcode/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ListCodeModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ListCodeModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ListCodeModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/listcode": {
    get: {
      parameters: {
        query: {
          FeatureType?: string;
          ListCode?: string;
          ListCodeDescription?: string;
          ClientId?: number;
          /* "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number; */
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ListCodeModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["ListCodeModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ListCodeModel"];
        };
      };
    };
  };
  "/api/project/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProjectModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProjectModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ProjectModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/project": {
    get: {
      parameters: {
        query: {
          ProjectName?: string;
          ProjectDescription?: string;
          ParentProjectName?: string;
          RootProject?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProjectModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["ProjectModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ProjectModel"];
        };
      };
    };
  };
  "/api/project/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProjectModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/staking/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
          workOrderId: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StakingModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
          workOrderId: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StakingModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["StakingModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
          workorderid: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{workorderid}/staking": {
    get: {
      parameters: {
        path: {
          workOrderId: number;
        };
        query: {
          WorkOrderNumber?: string;
          WoId?: number;
          StakingName?: string;
          Description?: string;
          ProposedBy?: string;
          ProposedDate?: string;
          IncludeChildren?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StakingModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          workOrderId: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["StakingModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["StakingModel"];
        };
      };
    };
  };
  "/api/workorder/staking/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StakingModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/staking/search": {
    post: {
      parameters: {
        path: {
          workOrderId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StakingModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/staking/{id}/estimatedstock": {
    get: {
      parameters: {
        path: {
          id: number;
          workorderid: string;
        };
        query: {
          CalloutEri?: string;
          CalloutDescription?: string;
          StockNumber?: string;
          TotalStockCount?: number;
          UnitOfMeasure?: string;
          TotalStockCost?: number;
          UnitPrice?: number;
          WarehouseCode?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StakingStockSummaryModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{workorderid}/staking/{id}/estimatedstock/search": {
    post: {
      parameters: {
        path: {
          id: number;
          workorderid: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StakingStockSummaryModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{workorderid}/staking/{stakingid}/callout": {
    post: {
      parameters: {
        path: {
          workOrderId: number;
          stakingId: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["StakingModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CalloutModel"][];
        };
      };
    };
  };
  "/api/stock/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StockModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StockModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["StockModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/stock": {
    get: {
      parameters: {
        query: {
          StockNumber?: string;
          Description?: string;
          IncludeChildren?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StockModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["StockModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["StockModel"];
        };
      };
    };
  };
  "/api/stock/{id}/constructionunit": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          UnitType?: string;
          Code?: string;
          Description?: string;
          StockNumber?: string;
          StockDescription?: string;
          CuStockCount?: number;
          IssueUnitOfMeasure?: string;
          IsLinear?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StockConstructionUnitModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/stock/{id}/transaction": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          TransactionType?: string;
          DocumentDate?: string;
          Price?: number;
          Quantity?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TransactionModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["TransactionModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["StockTransactionModel"];
        };
      };
    };
  };
  "/api/stock/{id}/adjustment": {
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["TransactionModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["StockTransactionModel"];
        };
      };
    };
  };
  "/api/subassembly/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["SubassemblyModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/subassembly/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["SubassemblyModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["SubassemblyModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SubassemblyModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/subassembly/full/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["SubassemblyModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/subassembly": {
    get: {
      parameters: {
        query: {
          Code?: string;
          Description?: string;
          ListCode?: string;
          Available?: boolean;
          IncludeChildren?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["SubassemblyModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["SubassemblyModel"];
          };
        };
        /** Accepted */
        202: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SubassemblyModel"];
        };
      };
    };
  };
  "/api/subassembly/{id}/history": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          SubassemblyHistoryId?: number;
          SubassemblyId?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["SubassemblyHistoryModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/unitofmeasure/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["UnitOfMeasureModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["UnitOfMeasureModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["UnitOfMeasureModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/unitofmeasure": {
    get: {
      parameters: {
        query: {
          UnitOfMeasure?: string;
          UnitOfMeasureDescription?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["UnitOfMeasureModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["UnitOfMeasureModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["UnitOfMeasureModel"];
        };
      };
    };
  };
  "/api/user/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeProducts?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["UserModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/user": {
    get: {
      parameters: {
        query: {
          FullName?: string;
          Email?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/user/{id}/products": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/user/{id}/clients": {
    get: {
      parameters: {
        query: {
          userId?: number;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/warehouse/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WarehouseModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WarehouseModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["WarehouseModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/warehouse": {
    get: {
      parameters: {
        query: {
          WarehouseCode?: string;
          WarehouseName?: string;
          FercAccount?: string;
          Address1?: string;
          Address2?: string;
          City?: string;
          StateAbbr?: string;
          Zip?: string;
          IncludeChildren?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WarehouseModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["WarehouseModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["WarehouseModel"];
        };
      };
    };
  };
  "/api/warehouse/{id}/stock": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          StockNumber?: string;
          FercAccount?: string;
          QuantityInStock?: number;
          Row?: string;
          Shelf?: string;
          Bin?: string;
          OrderPoint?: number;
          ReorderQuantity?: number;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StockWarehouseModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          includeChildren?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["WorkOrderModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/full/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder": {
    get: {
      parameters: {
        query: {
          WorkOrderType?: string;
          WorkOrderClass?: string;
          DistrictCode?: string;
          WarehouseCode?: string;
          BudgetNumber?: string;
          WoId?: number;
          WorkOrderNumber?: string;
          WorkOrderStatus?: string;
          EstimateName?: string;
          StakingName?: string;
          JobTitle?: string;
          CprAdjustmentYear?: number;
          Remarks?: string;
          RusPlan?: string;
          DateProposed?: string;
          ProposedBy?: string;
          DateActivated?: string;
          ActivatedBy?: string;
          DateCompleted?: string;
          CompletedBy?: string;
          DateTransCompleted?: string;
          TransCompletedBy?: string;
          DateCancelled?: string;
          CancelledBy?: string;
          GlClosedDate?: string;
          GlClosedBy?: string;
          GlCloseYear?: number;
          GlClosePeriod?: number;
          CprClosedDate?: string;
          CprClosedBy?: string;
          CprCloseYear?: number;
          HardClosedDate?: string;
          HardClosedBy?: string;
          IncludeChildren?: boolean;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["WorkOrderModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["WorkOrderModel"];
        };
      };
    };
  };
  "/api/workorder/search": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderModelDataBrowserPage"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
    };
  };
  "/api/workorder/{id}/advancestatus": {
    post: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          eventDate?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{id}/reversestatus": {
    post: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          eventDate?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{id}/transaction": {
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["WorkOrderTransactionModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["WorkOrderTransactionCustomTypeModel"][];
        };
      };
    };
  };
  "/api/workorder/{id}/estimatetoactualsummary": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateToActualSummaryModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{id}/estimatetoactualdetail": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EstimateToActualDetailModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{id}/financialsummary": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderFinancialSummaryModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorder/{id}/history": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          EventDate?: string;
          EventType?: string;
          EventSummary?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EventModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorderclass/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderClassModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderClassModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["WorkOrderClassModel"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
  };
  "/api/workorderclass": {
    get: {
      parameters: {
        query: {
          WorkOrderClass?: string;
          ClientId?: number;
          "PagingParams.Page"?: number;
          "PagingParams.Limit"?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WorkOrderClassModel"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Created */
        201: {
          content: {
            "application/json": components["schemas"]["WorkOrderClassModel"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
        /** Conflict */
        409: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Server Error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["WorkOrderClassModel"];
        };
      };
    };
  };
}

export interface components {
  schemas: {
    AssemblyChildModel: {
      /** Format: int32 */
      id?: number;
      assemblyCode?: string | null;
      assemblyListCode?: string | null;
      assemblyAvailable?: boolean;
      description?: string | null;
      /** Format: int32 */
      assemblyId: number;
      /** Format: int32 */
      subassemblyId: number;
      subassemblyCode?: string | null;
      subassemblyDescription?: string | null;
      /** Format: int32 */
      subassemblyCount: number;
      stock?: components["schemas"]["SubassemblyChildModel"][] | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      activeFlag?: boolean;
    };
    AssemblyHistoryModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      assemblyId?: number | null;
      code: string;
      historyDescription: string;
      currentDescription?: string | null;
      historyListCode: string;
      currentListCode?: string | null;
      historyAvailable: boolean;
      currentAvailable?: boolean;
      /** Format: int32 */
      subassemblyId?: number | null;
      /** Format: int32 */
      subassemblyCount?: number | null;
      /** Format: date-time */
      historyRecordDate: string;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      activeFlag?: boolean;
    };
    AssemblyModel: {
      /** Format: int32 */
      id?: number;
      code: string;
      description: string;
      /** Format: int32 */
      listCodeId: number;
      listCode?: string | null;
      available: boolean;
      subassembly?: components["schemas"]["AssemblyChildModel"][] | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    AssemblyModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["AssemblyModel"][] | null;
    };
    BudgetModel: {
      /** Format: int32 */
      id?: number;
      budgetNumber: string;
      description: string;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    CalloutModel: {
      /** Format: int32 */
      id?: number;
      /** Format: uuid */
      calloutGuid?: string | null;
      /** Format: int32 */
      stakingId?: number | null;
      stakingName?: string | null;
      /** Format: int32 */
      workOrderId?: number | null;
      /** Format: int32 */
      listCodeId?: number | null;
      calloutEri: string;
      /** Format: int32 */
      calloutQuantity: number;
      /** Format: int32 */
      currentQuantity?: number | null;
      /** Format: int32 */
      featureId?: number | null;
      featureClass?: string | null;
      stationNumber?: string | null;
      /** Format: int32 */
      constructionUnitId?: number | null;
      constructionUnitCode?: string | null;
      maintenanceItem?: boolean;
      /** Format: int32 */
      currentInstalledYear?: number | null;
      /** Format: int32 */
      currentPosition?: number | null;
      /** Format: int32 */
      calloutSpan?: number | null;
      /** Format: int32 */
      currentSpan?: number | null;
      /** Format: int32 */
      currentSpanAdder?: number | null;
      /** Format: double */
      currentSagFactor?: number | null;
      /** Format: uuid */
      affectedPlantUnitGuid?: string | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      activeFlag?: boolean;
    };
    ClientModel: {
      /** Format: int32 */
      clientId?: number;
      /** Format: uuid */
      tenantId: string;
      abbr?: string | null;
      clientName?: string | null;
      /** Format: uuid */
      createdByUnityUserId?: string;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedby?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
      utilityMajorType?: string | null;
      /** Format: int32 */
      utilityTypeId?: number;
      configSwitches?: components["schemas"]["ConfigSwitchModel"][] | null;
      clientSeats?: components["schemas"]["ClientSeatsModel"][] | null;
      plantModules?: components["schemas"]["PlantModuleModel"];
    };
    ClientSeatsModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      productId?: number;
      /** Format: int32 */
      clientId?: number;
      /** Format: int32 */
      seatsAssigned: number;
      activeFlag?: boolean;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
    };
    ComponentChild: {
      /** Format: int32 */
      componentId?: number;
      /** Format: double */
      componentCount?: number;
      componentType?: string | null;
      componentCode?: string | null;
      constructionUnitCode?: string | null;
      components?: components["schemas"]["ComponentChild"][] | null;
    };
    ConditionModel: {
      /** Format: int32 */
      id?: number;
      condition: string;
      /** Format: double */
      baseModifier: number;
      defaultCondition: boolean;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    ConditionUnitModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      conditionId: number;
      condition?: string | null;
      /** Format: double */
      baseModifier?: number | null;
      defaultCondition?: boolean;
      /** Format: int32 */
      constructionUnitId?: number | null;
      unitType?: string | null;
      code?: string | null;
      description?: string | null;
      /** Format: int32 */
      listCodeId?: number | null;
      listCode?: string | null;
      /** Format: double */
      installHours: number;
      /** Format: double */
      removeHours: number;
      /** Format: double */
      maintainHours: number;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    ConfigSwitchModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      configTypeId?: number;
      configValue?: string | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      activeFlag?: boolean;
    };
    ConstructionUnitModel: {
      /** Format: int32 */
      id?: number;
      code: string;
      description: string;
      /** Format: int32 */
      listCodeId: number;
      listCode?: string | null;
      available: boolean;
      constructionUnitType?: string | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    ConstructionUnitModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["ConstructionUnitModel"][] | null;
    };
    ConstructionUnitNextModel: {
      /** Format: int32 */
      id?: number;
      code: string;
      description: string;
      /** Format: int32 */
      listCodeId: number;
      listCode?: string | null;
      available: boolean;
      constructionUnitType?: string | null;
      components?: components["schemas"]["ComponentChild"][] | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    ContractorModel: {
      /** Format: int32 */
      id?: number;
      contractorName: string;
      address1?: string | null;
      address2?: string | null;
      city?: string | null;
      stateAbbr?: string | null;
      zip?: string | null;
      phone?: string | null;
      fax?: string | null;
      contractorRates?: components["schemas"]["ContractorRateModel"][] | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    ContractorModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["ContractorModel"][] | null;
    };
    ContractorRateModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      contractorId: number;
      /** Format: int32 */
      constructionUnitId: number;
      constructionUnitCode?: string | null;
      /** Format: double */
      installPrice?: number | null;
      /** Format: double */
      removePrice?: number | null;
      /** Format: double */
      maintainPrice?: number | null;
      /** Format: date */
      termStartDate?: string | null;
      /** Format: date */
      termEndDate?: string | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    ContractorRateModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["ContractorRateModel"][] | null;
    };
    DistrictModel: {
      /** Format: int32 */
      id?: number;
      /** Format: uuid */
      districtGuid?: string | null;
      districtCode: string;
      districtName?: string | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    EmployeeModel: {
      /** Format: int32 */
      id?: number;
      employeeCode?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      emailAddress?: string | null;
      /** Format: double */
      regularRate?: number | null;
      /** Format: double */
      overtimeRate?: number | null;
      /** Format: int32 */
      userId?: number | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    EquipmentModel: {
      /** Format: int32 */
      id?: number;
      equipmentCode: string;
      description: string;
      /** Format: double */
      mileageRate: number;
      dailyMileage?: boolean;
      /** Format: double */
      hourlyRate: number;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    ErrorModel: {
      additionalInfo?: string | null;
      /** Format: int32 */
      errorNumber?: number;
      type?: string | null;
      errorMessage?: string | null;
      source?: string | null;
      clientErrorMessage?: string | null;
      /** Format: int32 */
      userId?: number | null;
      /** Format: int32 */
      modelId?: number | null;
      /** Format: int32 */
      code?: number;
    };
    EstimateModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      workOrderId?: number;
      workOrderNumber?: string | null;
      /** Format: int32 */
      woId?: number | null;
      /** Format: int32 */
      workOrderStatusCode?: number;
      workOrderStatus?: string | null;
      /** Format: int32 */
      stakingId?: number | null;
      stakingName?: string | null;
      /** Format: int32 */
      conditionId?: number | null;
      condition?: string | null;
      /** Format: int32 */
      contractorId?: number | null;
      contractor?: string | null;
      estimateName: string;
      estimateDescription?: string | null;
      /** Format: date-time */
      estimateCreatedDate?: string | null;
      /** Format: double */
      laborModifier?: number | null;
      /** Format: int32 */
      milesToSite?: number | null;
      /** Format: int32 */
      minutesToSite?: number | null;
      /** Format: double */
      workHoursPerDay?: number | null;
      /** Format: date */
      estimatedStartDate?: string | null;
      dirty: boolean;
      locked: boolean;
      /** Format: date */
      dateCalculated?: string | null;
      calculatedBy?: string | null;
      approved: boolean;
      estimateApprovable?: boolean | null;
      /** Format: date-time */
      approvedDate?: string | null;
      approvedBy?: string | null;
      /** Format: double */
      estimatedTotal?: number;
      callouts?: components["schemas"]["CalloutModel"][] | null;
      crew?: components["schemas"]["EstimatedCrewModel"][] | null;
      estimateSummary?: components["schemas"]["EstimateSummaryModel"][] | null;
      estimatedCost?: components["schemas"]["EstimatedCostModel"][] | null;
      estimatedEquipment?:
      | components["schemas"]["EstimatedEquipmentModel"][]
      | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    EstimateModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["EstimateModel"][] | null;
    };
    EstimateSummaryModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      workOrderId: number;
      workOrderNumber?: string | null;
      /** Format: int32 */
      woId?: number | null;
      /** Format: int32 */
      estimateId: number;
      estimateName?: string | null;
      approvedEstimate?: boolean;
      /** Format: date */
      dateCalculated?: string | null;
      calculatedBy?: string | null;
      /** Format: int32 */
      stakingId: number;
      stakingName?: string | null;
      stakingDescription?: string | null;
      /** Format: int32 */
      conditionId?: number | null;
      condition?: string | null;
      /** Format: int32 */
      contractorId?: number | null;
      contractor?: string | null;
      /** Format: double */
      material107: number;
      /** Format: double */
      material108: number;
      /** Format: double */
      laborHours: number;
      /** Format: double */
      labor107: number;
      /** Format: double */
      labor108: number;
      /** Format: double */
      equipment: number;
      /** Format: double */
      equipmentTransportation: number;
      /** Format: double */
      directCosts: number;
      /** Format: double */
      contribution: number;
      /** Format: double */
      transportation: number;
      /** Format: double */
      storeOverhead: number;
      /** Format: double */
      labor107Overhead: number;
      /** Format: double */
      labor108Overhead: number;
      /** Format: double */
      generalOverhead: number;
      /** Format: double */
      laborHoursPerDay: number;
      /** Format: double */
      laborHourlyRate: number;
      /** Format: double */
      laborHourlyOvertimeRate: number;
      /** Format: double */
      baseLaborOverhead: number;
      /** Format: double */
      baseMaterialOverhead: number;
      /** Format: double */
      baseGeneralOverhead: number;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      activeFlag?: boolean;
    };
    EstimateSummaryModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["EstimateSummaryModel"][] | null;
    };
    EstimateSummaryOverviewModel: {
      /** Format: int32 */
      workOrderId?: number;
      /** Format: int32 */
      estimateId?: number;
      estimateName?: string | null;
      estimateDescription?: string | null;
      /** Format: double */
      estimatedMaterialTotal?: number;
      /** Format: double */
      estimatedLaborTotal?: number;
      /** Format: double */
      estimatedEquipmentTotal?: number;
      /** Format: double */
      estimatedOtherTotal?: number;
      /** Format: double */
      estimatedContributionTotal?: number;
      /** Format: double */
      estimatedTotal?: number;
      /** Format: double */
      estimatedTotalLessContribution?: number;
      approved?: boolean;
    };
    EstimateToActualDetailModel: {
      transactionType?: string | null;
      resourceCode?: string | null;
      description?: string | null;
      uom?: string | null;
      /** Format: double */
      estimatedQuantity?: number;
      /** Format: double */
      estimatedRate?: number;
      /** Format: double */
      estimatedTotal?: number;
      /** Format: double */
      actualQuantity?: number;
      /** Format: double */
      actualRate?: number;
      /** Format: double */
      actualTotal?: number;
      /** Format: double */
      variance?: number;
      /** Format: int32 */
      id?: number;
      model?: string | null;
    };
    EstimateToActualSummaryModel: {
      /** Format: int32 */
      workOrderId?: number;
      /** Format: double */
      estimatedMaterialTotal?: number;
      /** Format: double */
      actualMaterialTotal?: number;
      /** Format: double */
      estimatedLaborTotal?: number;
      /** Format: double */
      actualLaborTotal?: number;
      /** Format: double */
      estimatedEquipmentTotal?: number;
      /** Format: double */
      actualEquipmentTotal?: number;
      /** Format: double */
      estimatedOtherTotal?: number;
      /** Format: double */
      actualOtherTotal?: number;
      /** Format: double */
      estimatedContributionTotal?: number;
      /** Format: double */
      actualContributionTotal?: number;
    };
    EstimatedCostModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      clientId: number;
      /** Format: int32 */
      workOrderId?: number | null;
      /** Format: int32 */
      estimateId?: number | null;
      /** Format: int32 */
      accountId?: number | null;
      fercAccount?: string | null;
      /** Format: int32 */
      transactionTypeId: number;
      transactionType?: string | null;
      transactionDisplayName?: string | null;
      description?: string | null;
      /** Format: double */
      totalCost: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      updateProcedureTransactionType?: string | null;
      activeFlag?: boolean;
    };
    EstimatedCostModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["EstimatedCostModel"][] | null;
    };
    EstimatedCrewModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      estimateId: number;
      /** Format: int32 */
      workOrderId?: number | null;
      estimateName?: string | null;
      /** Format: int32 */
      employeeId: number;
      employeeCode?: string | null;
      employeeName?: string | null;
      /** Format: double */
      hourlyRate?: number;
      /** Format: double */
      overtimeRate?: number | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      activeFlag?: boolean;
    };
    EstimatedCrewModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["EstimatedCrewModel"][] | null;
    };
    EstimatedEquipmentModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      workOrderId?: number | null;
      /** Format: int32 */
      estimateId?: number | null;
      /** Format: int32 */
      clientId: number;
      /** Format: int32 */
      equipmentId: number;
      equipmentCode?: string | null;
      /** Format: double */
      hours: number;
      /** Format: double */
      hourlyRate?: number | null;
      /** Format: double */
      usageCost?: number | null;
      /** Format: double */
      laborDays?: number | null;
      /** Format: double */
      tripCount?: number | null;
      /** Format: int32 */
      milesToSite?: number | null;
      /** Format: double */
      mileageRate: number;
      dailyMileage: boolean;
      /** Format: double */
      totalMiles?: number | null;
      /** Format: double */
      transportationCost?: number | null;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
    };
    EstimatedEquipmentModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["EstimatedEquipmentModel"][] | null;
    };
    EventModel: {
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      eventDate?: string | null;
      eventClass?: string | null;
      eventType?: string | null;
      eventSummary?: string | null;
    };
    FeatureModel: {
      /** Format: int32 */
      id?: number;
      /** Format: uuid */
      featureGuid?: string | null;
      /** Format: int32 */
      districtId: number;
      districtCode?: string | null;
      districtName?: string | null;
      /** Format: int32 */
      featureClassId: number;
      featureClass?: string | null;
      stationNumber?: string | null;
      sectionNumber?: string | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    FercAccountModel: {
      /** Format: int32 */
      id?: number;
      fercAccount: string;
      description: string;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    ListCodeModel: {
      /** Format: int32 */
      id?: number;
      featureType: string;
      listCode: string;
      listCodeDescription: string;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    OrderElements: {
      sortColumn?: string | null;
      sortDirection?: string | null;
    };
    PlantModuleModel: {
      /** Format: int32 */
      id?: number;
      material?: boolean;
      purchasing?: boolean;
      facilities?: boolean;
      scheduling?: boolean;
      fleet?: boolean;
      spread?: boolean;
      importMeters?: boolean;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      activeFlag?: boolean;
    };
    ProblemDetails: {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
    } & { [key: string]: unknown };
    ProjectModel: {
      /** Format: int32 */
      id?: number;
      projectName: string;
      projectDescription?: string | null;
      /** Format: int32 */
      parentProjectId?: number | null;
      parentProjectName?: string | null;
      rootProject?: boolean;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    ProjectModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["ProjectModel"][] | null;
    };
    Search: {
      filterElements?: components["schemas"]["SearchFilter"][] | null;
      /** Format: int32 */
      pageNumber?: number;
      /** Format: int32 */
      pageSize?: number;
      orderElements?: components["schemas"]["OrderElements"][] | null;
      eagerLoad?: boolean;
    };
    SearchFilter: {
      searchField?: string | null;
      searchOperator?: string | null;
      searchValue?: string | null;
    };
    StakingFeatureCalloutModel: {
      /** Format: int32 */
      calloutId?: number;
      /** Format: int32 */
      stakingId?: number;
      /** Format: int32 */
      workOrderId?: number;
      /** Format: int32 */
      featureId?: number | null;
      stationNumber?: string | null;
      eri?: string | null;
      eriName?: string | null;
      /** Format: int32 */
      calloutQuantity?: number;
      assemblyCode?: string | null;
      assemblyDescription?: string | null;
      /** Format: int32 */
      subassemblyCount?: number;
      subassemblyCode?: string | null;
      subassemblyDescription?: string | null;
      /** Format: double */
      stockCount?: number;
      stockNumber?: string | null;
      stockDescription?: string | null;
      /** Format: double */
      totalStockQuantity?: number;
      issueUnitOfMeasure?: string | null;
      /** Format: int32 */
      warehouseId?: number | null;
      warehouseCode?: string | null;
      /** Format: double */
      unitPrice?: number;
      /** Format: double */
      totalStockCost?: number;
    };
    StakingFeatureModel: {
      /** Format: int32 */
      id?: number;
      /** Format: uuid */
      featureGuid?: string | null;
      /** Format: int32 */
      districtId: number;
      districtCode?: string | null;
      districtName?: string | null;
      /** Format: int32 */
      featureClassId: number;
      featureClass?: string | null;
      stationNumber?: string | null;
      sectionNumber?: string | null;
      /** Format: int32 */
      stakingId?: number | null;
      /** Format: int32 */
      workOrderId?: number | null;
      workOrderNumber?: string | null;
      /** Format: int32 */
      woId?: number | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    StakingModel: {
      /** Format: int32 */
      id?: number;
      /** Format: uuid */
      stakingGuid?: string | null;
      /** Format: int32 */
      workOrderId: number;
      workOrderNumber?: string | null;
      /** Format: int32 */
      woId?: number | null;
      stakingName: string;
      description: string;
      proposedBy?: string | null;
      /** Format: date-time */
      proposedDate?: string | null;
      /** Format: uuid */
      workOrderGuid?: string | null;
      stakingFeature?: components["schemas"]["StakingFeatureModel"][] | null;
      stakingCallout?: components["schemas"]["CalloutModel"][] | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    StakingModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["StakingModel"][] | null;
    };
    StakingStockSummaryModel: {
      /** Format: int32 */
      clientId: number;
      /** Format: int32 */
      stakingId?: number;
      calloutEri?: string | null;
      calloutDescription?: string | null;
      /** Format: int32 */
      stockId?: number;
      stockNumber?: string | null;
      /** Format: double */
      totalStockCount?: number | null;
      unitOfMeasure?: string | null;
      /** Format: double */
      totalStockCost?: number | null;
      /** Format: double */
      unitPrice?: number | null;
      warehouseCode?: string | null;
    };
    StakingStockSummaryModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["StakingStockSummaryModel"][] | null;
    };
    StockConstructionUnitModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      clientId: number;
      unitType?: string | null;
      code: string;
      description: string;
      /** Format: int32 */
      stockId: number;
      stockNumber?: string | null;
      stockDescription?: string | null;
      /** Format: double */
      cuStockCount?: number | null;
      issueUnitOfMeasure?: string | null;
      isLinear?: boolean;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
    };
    StockModel: {
      /** Format: int32 */
      id?: number;
      stockNumber: string;
      description: string;
      /** Format: int32 */
      issueUnitOfMeasureId?: number | null;
      issueUnitOfMeasure?: string | null;
      /** Format: double */
      ratio: number;
      /** Format: int32 */
      purchaseUnitOfMeasureId?: number | null;
      purchaseUnitOfMeasure?: string | null;
      available: boolean;
      majorItem: boolean;
      hasWarehouse?: boolean;
      stockWarehouses?: components["schemas"]["StockWarehouseModel"][] | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    StockTransactionModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      clientId?: number;
      transactionType?: string | null;
      /** Format: date */
      documentDate?: string | null;
      /** Format: int32 */
      stockId?: number;
      /** Format: int32 */
      warehouseId?: number | null;
      /** Format: double */
      price?: number | null;
      /** Format: int32 */
      quantity?: number | null;
    };
    StockWarehouseModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      stockId: number;
      stockNumber?: string | null;
      /** Format: int32 */
      warehouseId: number;
      warehouseCode?: string | null;
      /** Format: int32 */
      accountId: number;
      fercAccount?: string | null;
      /** Format: int32 */
      quantityInStock?: number;
      /** Format: double */
      unitPrice?: number;
      /** Format: double */
      totalDollarValue?: number;
      /** Format: int32 */
      suspenseQuantity?: number;
      /** Format: double */
      suspenseDollars?: number;
      row?: string | null;
      shelf?: string | null;
      bin?: string | null;
      majorItem?: boolean;
      /** Format: int32 */
      orderPoint: number;
      /** Format: int32 */
      reorderQuantity: number;
      available?: boolean;
      lastChangeSource?: string | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    SubassemblyChildModel: {
      /** Format: int32 */
      id?: number;
      subassemblyCode?: string | null;
      /** Format: int32 */
      subassemblyId: number;
      /** Format: int32 */
      stockId: number;
      stockNumber?: string | null;
      stockDescription?: string | null;
      /** Format: double */
      stockCount: number;
      /** Format: int32 */
      issueUnitOfMeasureId?: number | null;
      issueUnitOfMeasure?: string | null;
      /** Format: int32 */
      purchaseUnitOfMeasureId?: number | null;
      purchaseUnitOfMeasure?: string | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      activeFlag?: boolean;
    };
    SubassemblyHistoryModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      subassemblyId?: number | null;
      subassemblyCode?: string | null;
      subassemblyDescription?: string | null;
      /** Format: double */
      stockCount?: number | null;
      stockNumber?: string | null;
      stockDescription?: string | null;
      /** Format: date-time */
      subHistoryDate?: string;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      activeFlag?: boolean;
    };
    SubassemblyModel: {
      /** Format: int32 */
      id?: number;
      code: string;
      description: string;
      /** Format: int32 */
      listCodeId: number;
      listCode?: string | null;
      available: boolean;
      /** Format: int32 */
      capitalAccountId?: number | null;
      capitalAccount?: string | null;
      /** Format: int32 */
      maintenanceAccountId?: number | null;
      maintenanceAccount?: string | null;
      /** Format: double */
      hoursInstall: number;
      /** Format: double */
      hoursRemove: number;
      /** Format: double */
      hoursMaintain: number;
      /** Format: int32 */
      spanAdder?: number | null;
      /** Format: double */
      sagFactor?: number | null;
      /** Format: int32 */
      cprUnitCount: number;
      isLinear?: boolean;
      stock?: components["schemas"]["SubassemblyChildModel"][] | null;
      conditionUnit?: components["schemas"]["ConditionUnitModel"][] | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    SubassemblyModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["SubassemblyModel"][] | null;
    };
    TransactionModel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      clientId?: number;
      /** Format: int32 */
      transactionTypeId?: number;
      transactionType?: string | null;
      transactionTypeCode?: string | null;
      transactionDisplayName?: string | null;
      /** Format: int32 */
      workOrderId?: number | null;
      workOrderNumber?: string | null;
      jobTitle?: string | null;
      /** Format: int32 */
      workOrderCprAdjustmentYear?: number | null;
      /** Format: int32 */
      accountId?: number | null;
      fercAccount?: string | null;
      fercAccountDescription?: string | null;
      /** Format: int32 */
      budgetId?: number | null;
      budgetNumber?: string | null;
      budget?: string | null;
      /** Format: int32 */
      equipmentId?: number | null;
      equipmentCode?: string | null;
      equipmentDescription?: string | null;
      /** Format: int32 */
      employeeId?: number | null;
      employeeCode?: string | null;
      employeeName?: string | null;
      employeeEmail?: string | null;
      /** Format: int32 */
      purchaseOrderId?: number | null;
      /** Format: int32 */
      stockId?: number | null;
      stockNumber?: string | null;
      stockDescription?: string | null;
      /** Format: int32 */
      warehouseId?: number | null;
      warehouseCode?: string | null;
      warehouseName?: string | null;
      /** Format: int32 */
      userTransTypeId?: number | null;
      /** Format: int32 */
      referenceTransactionId?: number | null;
      /** Format: int32 */
      entryId?: number | null;
      statusCode?: string | null;
      transactionStatus?: string | null;
      /** Format: date */
      documentDate?: string | null;
      documentNumber?: string | null;
      /** Format: date-time */
      dateEntered?: string | null;
      enteredBy?: string | null;
      /** Format: date-time */
      dateCancelled?: string | null;
      cancelledBy?: string | null;
      transactionDescription?: string | null;
      /** Format: double */
      quantity?: number | null;
      /** Format: double */
      price?: number | null;
      /** Format: double */
      distance?: number | null;
      /** Format: double */
      materialOverhead?: number | null;
      /** Format: double */
      generalOverhead?: number | null;
      /** Format: double */
      laborOverhead?: number | null;
      transactionSource?: string | null;
      /** Format: int32 */
      transactionSet?: number | null;
      /** Format: int32 */
      glPeriod?: number | null;
      /** Format: int32 */
      glYear?: number | null;
      trAllocation?: string | null;
      prepped?: boolean | null;
      /** Format: double */
      retireYear?: number | null;
      maintenanceItem?: boolean | null;
      overtime?: boolean | null;
      /** Format: double */
      hours?: number | null;
      /** Format: int32 */
      warehouseQuantity?: number | null;
      /** Format: double */
      warehouseDollarValue?: number | null;
      /** Format: double */
      unitPrice?: number | null;
      /** Format: int32 */
      batchId?: number | null;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: double */
      cancellId?: number | null;
      /** Format: int32 */
      poItemId?: number | null;
      /** Format: int32 */
      poQuantity?: number | null;
      payClassCode?: string | null;
      /** Format: date-time */
      transactionDate?: string | null;
      linkPk?: string | null;
    };
    UnitOfMeasureModel: {
      /** Format: int32 */
      id?: number;
      unitOfMeasure: string;
      unitOfMeasureDescription: string;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    UserModel: {
      /** Format: int32 */
      id?: number;
      /** Format: uuid */
      userGuid?: string;
      /** Format: uuid */
      unityUserId?: string | null;
      products?: components["schemas"]["UserProducts"][] | null;
      fullName?: string | null;
      email?: string | null;
      /** Format: uuid */
      activeDirectoryId?: string;
      /** Format: uuid */
      defaultTenantId?: string;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    UserProducts: {
      /** Format: int32 */
      id?: number;
      productName?: string | null;
      /** Format: int32 */
      userId?: number;
      /** Format: int32 */
      productId?: number;
      /** Format: date-time */
      insertedDate?: string;
      lastUpdatedBy?: string | null;
    };
    WarehouseModel: {
      /** Format: int32 */
      id?: number;
      warehouseCode: string;
      warehouseName: string;
      /** Format: int32 */
      accountId?: number | null;
      fercAccount?: string | null;
      address1?: string | null;
      address2?: string | null;
      city?: string | null;
      stateAbbr?: string | null;
      zip?: string | null;
      stockWarehouses?: components["schemas"]["StockWarehouseModel"][] | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    WorkOrderClassModel: {
      /** Format: int32 */
      id?: number;
      workOrderClass: string;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    WorkOrderFinancialSummaryModel: {
      /** Format: int32 */
      workOrderId?: number;
      /** Format: double */
      inventoryIssue?: number;
      /** Format: double */
      inventoryReturn?: number;
      /** Format: double */
      inventorySalvage?: number;
      /** Format: double */
      inventoryJunk?: number;
      /** Format: double */
      inventoryTotal?: number;
      /** Format: double */
      laborTotal?: number;
      /** Format: double */
      equipmentTotal?: number;
      /** Format: double */
      directCost?: number;
      /** Format: double */
      transportation?: number;
      /** Format: double */
      fringesClearing?: number;
      /** Format: double */
      otherTotal?: number;
      /** Format: double */
      ciacCash?: number;
      /** Format: double */
      ciacNonCash?: number;
      /** Format: double */
      reimbursement?: number;
      /** Format: double */
      contributionTotal?: number;
      /** Format: double */
      totalSpend?: number;
    };
    /**
     * Meeting Minutes Model
     */
    MeetingMinutesModel: {
      code: number;
      acronym: string | null;
      name: string | null;
      address: string | null;
      dateStarted: string | null;
      dateCompleted: string | null;
      status: string | null;
    };

    WorkOrderModel: {
      /** Format: int32 */
      id?: number;
      utilityTypeCode?: string | null;
      workOrderTypeId: string;
      workOrderType?: string | null;
      /** Format: int32 */
      workOrderClassId?: number | null;
      workOrderClass?: string | null;
      /** Format: int32 */
      districtId: number;
      districtCode?: string | null;
      /** Format: int32 */
      warehouseId?: number | null;
      warehouseCode?: string | null;
      /** Format: int32 */
      projectId?: number | null;
      projectName?: string | null;
      /** Format: int32 */
      budgetId?: number | null;
      budgetNumber?: string | null;
      /** Format: int32 */
      woId: number;
      workOrderNumber?: string | null;
      workOrderName?: string | null;
      workOrderDescription?: string | null;
      /** Format: int32 */
      statusCode: number;
      workOrderStatus?: string | null;
      jobTitle: string;
      /** Format: int32 */
      estimateId?: number | null;
      /** Format: int32 */
      conditionId?: number | null;
      condition?: string | null;
      estimateName?: string | null;
      /** Format: int32 */
      stakingId?: number | null;
      stakingName?: string | null;
      /** Format: int32 */
      cprAdjustmentYear?: number | null;
      remarks?: string | null;
      rusPlan?: string | null;
      /** Format: date-time */
      dateProposed?: string | null;
      proposedBy?: string | null;
      /** Format: date-time */
      dateEstimateApproved?: string | null;
      estimateApprovedBy?: string | null;
      /** Format: date-time */
      dateActivated?: string | null;
      activatedBy?: string | null;
      /** Format: date-time */
      dateCompleted?: string | null;
      completedBy?: string | null;
      /** Format: date-time */
      dateTransCompleted?: string | null;
      transCompletedBy?: string | null;
      /** Format: date-time */
      dateCancelled?: string | null;
      cancelledBy?: string | null;
      /** Format: date-time */
      glClosedDate?: string | null;
      glClosedBy?: string | null;
      /** Format: int32 */
      glCloseYear?: number | null;
      /** Format: int32 */
      glClosePeriod?: number | null;
      /** Format: date-time */
      cprClosedDate?: string | null;
      cprClosedBy?: string | null;
      /** Format: int32 */
      cprCloseYear?: number | null;
      /** Format: date-time */
      hardClosedDate?: string | null;
      hardClosedBy?: string | null;
      prepped: boolean;
      linkPk?: string | null;
      /** Format: date-time */
      lastStatusChangeDate?: string | null;
      /** Format: uuid */
      workOrderGuid?: string | null;
      estimates?: components["schemas"]["EstimateModel"][] | null;
      staking?: components["schemas"]["StakingModel"][] | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
      /** Format: byte */
      version?: string | null;
      activeFlag?: boolean;
    };
    WorkOrderModelDataBrowserPage: {
      countable?: boolean;
      /** Format: int32 */
      total?: number;
      pageList?: components["schemas"]["WorkOrderModel"][] | null;
    };
    WorkOrderTransactionCustomTypeModel: {
      transactionType: string;
      /** Format: date */
      documentDate?: string | null;
      documentNumber?: string | null;
      /** Format: int32 */
      workOrderId?: number | null;
      /** Format: int32 */
      budgetId?: number | null;
      /** Format: int32 */
      accountId?: number | null;
      /** Format: int32 */
      glPeriod?: number | null;
      /** Format: int32 */
      glYear?: number | null;
      /** Format: int32 */
      stockId?: number | null;
      /** Format: int32 */
      employeeId?: number | null;
      /** Format: int32 */
      equipmentId?: number | null;
      /** Format: int32 */
      warehouseId?: number | null;
      maintenanceItem?: boolean | null;
      /** Format: int32 */
      quantity?: number | null;
      /** Format: int32 */
      installYear?: number | null;
      /** Format: double */
      dollars?: number | null;
      description?: string | null;
      trAllocation?: string | null;
      /** Format: double */
      hours?: number | null;
      overtime?: boolean | null;
      cash?: boolean | null;
      /** Format: int32 */
      userTransTypeId?: number | null;
      /** Format: double */
      miles?: number | null;
      /** Format: int32 */
      transactionId?: number;
    };
    WorkOrderTransactionModel: {
      /** Format: int32 */
      id?: number;
      transactionType: string;
      transactionDisplayName?: string | null;
      /** Format: date */
      documentDate?: string | null;
      documentNumber?: string | null;
      /** Format: int32 */
      workOrderId?: number | null;
      workOrderNumber?: string | null;
      /** Format: int32 */
      budgetId?: number | null;
      budgetNumber?: string | null;
      /** Format: int32 */
      accountId?: number | null;
      fercAccount?: string | null;
      /** Format: int32 */
      glPeriod?: number | null;
      /** Format: int32 */
      glYear?: number | null;
      /** Format: int32 */
      equipmentId?: number | null;
      equipmentCode?: string | null;
      equipmentDescription?: string | null;
      /** Format: int32 */
      employeeId?: number | null;
      employeeCode?: string | null;
      /** Format: int32 */
      stockId?: number | null;
      stockNumber?: string | null;
      stockDescription?: string | null;
      /** Format: int32 */
      warehouseId?: number | null;
      warehouseCode?: string | null;
      /** Format: int32 */
      userTransTypeId?: number | null;
      /** Format: int32 */
      referenceTransactionId?: number | null;
      statusCode?: string | null;
      transactionStatus?: string | null;
      transactionDescription?: string | null;
      /** Format: double */
      quantity?: number | null;
      /** Format: double */
      price?: number | null;
      /** Format: double */
      distance?: number | null;
      /** Format: double */
      materialOverhead?: number | null;
      /** Format: double */
      generalOverhead?: number | null;
      /** Format: double */
      laborOverhead?: number | null;
      trAllocation?: string | null;
      /** Format: double */
      retireYear?: number | null;
      maintenanceItem?: boolean | null;
      overtime?: boolean | null;
      /** Format: double */
      hours?: number | null;
      /** Format: int32 */
      warehouseQuantity?: number | null;
      /** Format: double */
      warehouseDollarValue?: number | null;
      /** Format: double */
      unitPrice?: number | null;
      /** Format: date-time */
      dateEntered?: string | null;
      enteredBy?: string | null;
      /** Format: date-time */
      dateCancelled?: string | null;
      cancelledBy?: string | null;
      /** Format: int32 */
      clientId: number;
      /** Format: date-time */
      insertedDate?: string;
      /** Format: date-time */
      lastUpdatedDate?: string | null;
      lastUpdatedBy?: string | null;
    };
  };
}

export interface operations { }

export interface external { }
